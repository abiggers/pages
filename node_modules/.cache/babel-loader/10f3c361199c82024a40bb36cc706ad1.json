{"ast":null,"code":"import _classCallCheck from \"/media/alex/Data/backup/alex/alex/biggers-software2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/alex/Data/backup/alex/alex/biggers-software2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/alex/Data/backup/alex/alex/biggers-software2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/alex/Data/backup/alex/alex/biggers-software2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/alex/Data/backup/alex/alex/biggers-software2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/media/alex/Data/backup/alex/alex/biggers-software2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/media/alex/Data/backup/alex/alex/biggers-software2/src/components/d3-manipulator/force3d.js\";\nimport React, { Component } from 'react';\nimport ForceGraph3D from '3d-force-graph';\nimport * as d3 from 'd3-force-3d';\nimport * as THREE from 'three';\nimport * as chromatic from 'd3-scale-chromatic';\nimport * as d3scale from 'd3-scale';\n\nvar Force3D =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Force3D, _Component);\n\n  function Force3D(props) {\n    var _this;\n\n    _classCallCheck(this, Force3D);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Force3D).call(this, props));\n    _this.create3DChart = _this.create3DChart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      nodes: 0,\n      nodeSize: 0,\n      linkDistance: 1,\n      nodeOpacity: 0.75,\n      linkWidth: 1\n    };\n    return _this;\n  }\n\n  _createClass(Force3D, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.create3DChart();\n    }\n  }, {\n    key: \"create3DChart\",\n    value: function create3DChart() {\n      var _this2 = this;\n\n      var elem = document.getElementById(\"graph\");\n      var Graph = ForceGraph3D()(elem); //this interval checks\n\n      setInterval(function () {\n        if (_this2.state.nodes !== _this2.props.data.nodes.length || _this2.props.nodeSize !== _this2.state.nodesize || _this2.props.linkDistance !== _this2.state.linkDistance || _this2.state.nodeOpacity !== _this2.props.nodeOpacity || _this2.state.linkWidth !== _this2.props.linkWidth) {\n          Graph.graphData(_this2.props.data).width([_this2.props.w]).enableNodeDrag(false).nodeThreeObject(function (node) {\n            return new THREE.Mesh([new THREE.BoxGeometry(_this2.props.nodeSize * 10, _this2.props.nodeSize * 10, _this2.props.nodeSize * 10), new THREE.ConeGeometry(_this2.props.nodeSize * 5, _this2.props.nodeSize * 10), new THREE.CylinderGeometry(_this2.props.nodeSize * 5, _this2.props.nodeSize * 5, _this2.props.nodeSize * 10), new THREE.DodecahedronGeometry(_this2.props.nodeSize * 5), new THREE.SphereGeometry(_this2.props.nodeSize * 5), new THREE.TorusGeometry(_this2.props.nodeSize * 5, _this2.props.nodeSize), new THREE.TorusKnotGeometry(_this2.props.nodeSize * 5, _this2.props.nodeSize)][node['id'] % 7], new THREE.MeshLambertMaterial({\n              color: _this2.props.colorScaler(node[_this2.props.colorBy]),\n              transparent: true,\n              opacity: _this2.props.nodeOpacity\n            }));\n          }).linkWidth(_this2.props.linkWidth).linkDirectionalParticles('value').linkDirectionalParticleSpeed(0.015).linkDirectionalParticleWidth(_this2.props.linkWidth * .8).d3Force('link').distance(_this2.props.linkDistance);\n\n          _this2.setState({\n            nodes: _this2.props.data.nodes.length,\n            nodesize: _this2.props.nodeSize,\n            linkDistance: _this2.props.linkDistance,\n            nodeOpacity: _this2.props.nodeOpacity,\n            linkWidth: _this2.props.linkWidth\n          });\n        }\n      }, 1000); //\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"graph-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        id: \"graph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Force3D;\n}(Component);\n\nexport default Force3D;","map":{"version":3,"sources":["/media/alex/Data/backup/alex/alex/biggers-software2/src/components/d3-manipulator/force3d.js"],"names":["React","Component","ForceGraph3D","d3","THREE","chromatic","d3scale","Force3D","props","create3DChart","bind","state","nodes","nodeSize","linkDistance","nodeOpacity","linkWidth","elem","document","getElementById","Graph","setInterval","data","length","nodesize","graphData","width","w","enableNodeDrag","nodeThreeObject","node","Mesh","BoxGeometry","ConeGeometry","CylinderGeometry","DodecahedronGeometry","SphereGeometry","TorusGeometry","TorusKnotGeometry","MeshLambertMaterial","color","colorScaler","colorBy","transparent","opacity","linkDirectionalParticles","linkDirectionalParticleSpeed","linkDirectionalParticleWidth","d3Force","distance","setState","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ForceGraph3D from '3d-force-graph';\nimport * as d3 from 'd3-force-3d'\nimport * as THREE from 'three'\nimport * as chromatic from 'd3-scale-chromatic'\nimport * as d3scale from 'd3-scale'\n\n\n\n\n\nclass Force3D extends Component {\n    constructor(props) {\n        super(props)\n        this.create3DChart = this.create3DChart.bind(this)\n\n\n\n        this.state = {\n            nodes: 0,\n            nodeSize: 0,\n            linkDistance: 1,\n            nodeOpacity: 0.75,\n            linkWidth: 1\n\n        }\n\n\n    }\n    componentDidMount() {\n        this.create3DChart()\n\n\n    }\n\n\n    create3DChart() {\n\n        const elem = document.getElementById(\"graph\");\n        let Graph = ForceGraph3D()(elem)\n\n        //this interval checks\n        setInterval(() => {\n            \n            if (this.state.nodes !== this.props.data.nodes.length || this.props.nodeSize !== this.state.nodesize || this.props.linkDistance !== this.state.linkDistance || this.state.nodeOpacity !== this.props.nodeOpacity || this.state.linkWidth !== this.props.linkWidth) {\n                Graph.graphData(this.props.data)\n                .width([this.props.w])\n                .enableNodeDrag(false)\n               .nodeThreeObject((node) => new THREE.Mesh(\n                   [\n                       new THREE.BoxGeometry(this.props.nodeSize * 10, this.props.nodeSize * 10, this.props.nodeSize * 10),\n                       new THREE.ConeGeometry(this.props.nodeSize * 5, this.props.nodeSize * 10),\n                       new THREE.CylinderGeometry(this.props.nodeSize * 5, this.props.nodeSize * 5, this.props.nodeSize * 10),\n                       new THREE.DodecahedronGeometry(this.props.nodeSize * 5),\n                       new THREE.SphereGeometry(this.props.nodeSize * 5),\n                       new THREE.TorusGeometry(this.props.nodeSize * 5, this.props.nodeSize),\n                       new THREE.TorusKnotGeometry(this.props.nodeSize * 5, this.props.nodeSize)\n                   ][node['id'] % 7],\n                   new THREE.MeshLambertMaterial({\n                       color:this.props.colorScaler(node[this.props.colorBy]),\n                       transparent: true,\n                       opacity: this.props.nodeOpacity\n                   })\n               ))\n                .linkWidth(this.props.linkWidth)\n                .linkDirectionalParticles('value')\n                .linkDirectionalParticleSpeed(0.015)\n                .linkDirectionalParticleWidth(this.props.linkWidth * .8)\n                .d3Force('link')\n                .distance(this.props.linkDistance)\n\n                this.setState({ nodes: this.props.data.nodes.length, nodesize: this.props.nodeSize, linkDistance: this.props.linkDistance, nodeOpacity: this.props.nodeOpacity, linkWidth: this.props.linkWidth})\n\n            }\n        }, 1000\n        )\n\n\n\n\n\n\n        //\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div id='graph-title'>{this.props.title}</div>\n                <div id=\"graph\"></div>\n            </div>\n\n        )\n    }\n}\nexport default Force3D"]},"metadata":{},"sourceType":"module"}